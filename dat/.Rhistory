#I think some samples need to be Filtered or Normalized!!
len <- as.numeric(df$Length)
mean(len)
median(len)
boxplot(len) #I think some samples need to be Filtered or Normalized!!
#Check the distributed length
len <- as.numeric(df$Length)
mean(len)
median(len)
boxplot(len) #I think some samples need to be Filtered or Normalized!!
#Filtering
library(dplyr)
thresh <- 2000
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Checking Spearman Correlation
cor(for.plot[,1],for.plot[,2],method="spearman") #Too low :(
#Checking Spearman Correlation
#Because of many outliers, I used Spearman correlation.
cor(for.plot[,1],for.plot[,2],method="Pearsom") # 0.13 Too low :(
#Checking Spearman Correlation
#Because of many outliers, I used Spearman correlation.
cor(for.plot[,1],for.plot[,2],method="pearsom") # 0.13 Too low :(
#Checking Spearman Correlation
#Because of many outliers, I used Spearman correlation.
cor(for.plot[,1],for.plot[,2],method="pearson") # 0.13 Too low :(
#Scatter plotting
plot(for.plot[,1],for.plot[,2]) #The shape of plot is not similar to the example...
#Checking Spearman Correlation
##Spearman correlation was used to be less affected by outliers.
cor(for.plot[,1],for.plot[,2],method="spearman") # 0.13 Too low :(
#Check the distributed length
len <- as.numeric(df$Length)
mean(len)
median(len)
boxplot(len) #I think some samples need to be Filtered or Normalized!!
#2. Filtered scenario
#Filtering
library(dplyr)
thresh <- 2000
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
dim(for.plot)
thresh <- 2000
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
dim(for.plot)
#Scatter plotting
plot(for.plot[,1],for.plot[,2])
#Checking Spearman Correlation
cor(for.plot[,1],for.plot[,2],method="spearman") #Too low :(
#Checking Spearman Correlation
cor(for.plot[,1],for.plot[,2],method="pearson") # 0.157 (>0.13)
#Checking Spearman Correlation
cor(for.plot[,1],for.plot[,2],method="spearman") # 0.157 (>0.13)
thresh <- 3000
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
dim(for.plot)
#Scatter plotting
plot(for.plot[,1],for.plot[,2])
#Checking Spearman Correlation
cor(for.plot[,1],for.plot[,2],method="spearman") # 0.157 (>0.13)
thresh <- 10000
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
dim(for.plot)
#Scatter plotting
plot(for.plot[,1],for.plot[,2])
#Checking Spearman Correlation
cor(for.plot[,1],for.plot[,2],method="spearman") # 0.157 (>0.13)
thresh <- 5000
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
dim(for.plot)
#Scatter plotting
plot(for.plot[,1],for.plot[,2])
#Checking Spearman Correlation
cor(for.plot[,1],for.plot[,2],method="spearman") # 0.157 (>0.13)
#2-2. Filtered scenario
#Filtering with several constants.
seq.Thresh <- seq(1000:10000, by=100)
#2-2. Filtered scenario
#Filtering with several constants.
seq.Thresh <- seq(from=1000,to10000, by=100)
#2-2. Filtered scenario
#Filtering with several constants.
seq.Thresh <- seq(from=1000,to=10000, by=100)
seq.Thresh
my.cor <- function(df,thresh,method="spearman"){
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
return(cor(for.plot[,1],for.plot[,2],method="spearman"))
}
my.cor(df,2000)
my.cor(df,3000)
my.cor(df,10000)
my.cor(df,seq.Thresh)
cor.vec <- c()
cor.vec <- c()
for(trsh in seq.Thresh){
cor.vec<-c(my.cor(df,trsh),cor.vec)
}
cor.vec
my.cor(df,1000)
my.cor(df,10000)
my.cor(df,1100)
my.cor(df,9900)
cor.vec <- c()
#2-2. Filtered scenario
#Checking trend with thresholds.
seq.Thresh <- seq(from=1000,to=20000, by=100)
my.cor <- function(df,thresh,method="spearman"){
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
return(cor(for.plot[,1],for.plot[,2],method="spearman"))
}
cor.vec <- c()
for(trsh in seq.Thresh){
cor.vec<-c(cor.vec,my.cor(df,trsh))
}
cor.vec
plot(seq.Thresh,cor.vec)
pearson.cor.vec <- c()
for(trsh in seq.Thresh){
pearson.cor.vec<-c(pearson.cor.vec,my.cor(df,trsh),method="pearson")
}
pearson.cor.vec
plot(seq.Thresh,pearson.cor.vec)
dim(pearson.cor.vec)
pearson.cor.vec <- c()
for(trsh in seq.Thresh){
pearson.cor.vec<-c(pearson.cor.vec,my.cor(df,trsh,method="pearson"))
}
pearson.cor.vec
plot(seq.Thresh,pearson.cor.vec)
cor.vec
plot(seq.Thresh,cor.vec)
plot(seq.Thresh,pearson.cor.vec)
max(pearson.cor.vec)
summary(pearson.cor.vec)
summary(cor.vec)
pearson.cor.vec[1]
cor.vec[1]
my.cor <- function(df,thresh,method="spearman"){
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
return(cor(for.plot[,1],for.plot[,2],method=method))
}
pearson.cor.vec <- c()
for(trsh in seq.Thresh){
pearson.cor.vec<-c(pearson.cor.vec,my.cor(df,trsh,method="pearson"))
}
pearson.cor.vec
plot(seq.Thresh,pearson.cor.vec)
summary(pearson.cor.vec)
summary(cor.vec)
#2-2. Filtered scenario
#Checking trend with thresholds.
seq.Thresh <- seq(from=0,to=20000, by=100)
my.cor <- function(df,thresh,method="spearman"){
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
return(cor(for.plot[,1],for.plot[,2],method=method))
}
cor.vec <- c()
for(trsh in seq.Thresh){
cor.vec<-c(cor.vec,my.cor(df,trsh))
}
plot(seq.Thresh,cor.vec)
#Trend for the Spearman correlation
pearson.cor.vec <- c()
for(trsh in seq.Thresh){
pearson.cor.vec<-c(pearson.cor.vec,my.cor(df,trsh,method="pearson"))
}
pearson.cor.vec
plot(seq.Thresh,pearson.cor.vec)
#Just for comparison
summary(pearson.cor.vec)
summary(cor.vec)
plot(seq.Thresh,cor.vec)
#2-1. Filtered scenario
#Filtering with arbitrary threshold.
library(dplyr)
thresh <- 5000
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
dim(for.plot)
#Scatter plotting
plot(for.plot[,1],for.plot[,2])
#Checking Spearman Correlation
cor(for.plot[,1],for.plot[,2],method="spearman") # 0.157 (>0.13)
plot(seq.Thresh,pearson.cor.vec)
thresh <- 6500
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
dim(for.plot)
#Scatter plotting
plot(for.plot[,1],for.plot[,2])
#Checking Spearman Correlation
cor(for.plot[,1],for.plot[,2],method="spearman") # 0.157 (>0.13)
thresh <- 5000
df2<-filter(df, Length > thresh)
dfs<-df2
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change))
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
dim(for.plot)
#Scatter plotting
plot(for.plot[,1],for.plot[,2])
#Result plot.
##Threshold 5000
library(ggplot2)
len
#Result plot.
##Threshold 5000
library(ggplot2)
df
#Result plot.
##Used Threshold: 5000
read.csv('https://hyeshik.qbio.io/binfo/mouselocalization-20210507.txt', sep='\t')
#Result plot.
##Used Threshold: 5000
read.csv(url('https://hyeshik.qbio.io/binfo/mouselocalization-20210507.txt'), sep='\t')
#Result plot.
##Used Threshold: 5000
ref<-read.csv(url('https://hyeshik.qbio.io/binfo/mouselocalization-20210507.txt'), sep='\t')
ref
df
df2
df2
ref
df2$Geneid
ref$gene_id
length(ref$gene_id)
length(df2$Geneid)
df2$Geneid%in%ref$gene_id
sum(df2$Geneid%in%ref$gene_id)
length(df2$Geneid)
ref$Gene.names
ref$type
ref$gene_id
df2$Geneid
ref$gene_id
ref$gene_id[1]
length(ref$gene_id[1])
length(ref$gene_id[2])
length(as.string(ref$gene_id[2]))
as.character(ref$gene_id[2])
length(as.character(ref$gene_id[2]))
nchar(ref$gene_id[2])
nchar(ref$gene_id[1])
nchar(ref$gene_id[100])
substr(df2$Geneid,1,18)
df2$Geneid<-substr(df2$Geneid,1,18)
sum(df2$Geneid%in%ref$gene_id)
length(ref$gene_id)
length(df2$Geneid)
df2$Geneid<-substr(df2$Geneid,1,18)
sum(df2$Geneid%in%ref$gene_id)
df2$Geneid%in%ref$gene_id
df2[df2$Geneid%in%ref$gene_id,]
left.gene<-df2[df2$Geneid%in%ref$gene_id,]
dfs<-df2[df2$Geneid%in%ref$gene_id,]
dfs
merge(dfs,ref)
as<-merge(dfs,ref)
dfs
df2$Geneid%in%ref$gene_id
df2$Geneid
ref$gene_id%in%df2$Geneid
ref[ref$gene_id%in%df2$Geneid,]
ref<-ref[ref$gene_id%in%df2$Geneid,]
dfs<-df2[df2$Geneid%in%ref$gene_id,]
ref
dfs
ref$gene_id==dfs$Geneid
dim(ref)
dim(dfs)
#Result plot.
##Used Threshold: 5000
ref<-read.csv(url('https://hyeshik.qbio.io/binfo/mouselocalization-20210507.txt'), sep='\t')
#Result plot.
##Used Threshold: 5000
ref<-read.csv(url('https://hyeshik.qbio.io/binfo/mouselocalization-20210507.txt'), sep='\t')
df2
colnames(ref)
colnames(ref)[2]<-"Geneid"
colnames(ref)
dfs<-merge(df2,ref,by="Geneid")
dfs
df2
df2$Geneid
#Result plot.
##Used Threshold: 5000
ref<-read.csv(url('https://hyeshik.qbio.io/binfo/mouselocalization-20210507.txt'), sep='\t')
colnames(ref)
colnames(ref)[1]<-"Geneid"
#Preprocessing
df2$Geneid<-substr(df2$Geneid,1,18)
dfs<-merge(df2,ref,by="Geneid")
dfs
colnames(dfs)
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
rden.change
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change),dfs$type)
for.plot
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot)),] #Removing inf index
dim(for.plot)
for.plot
for.plot<-for.plot[is.finite(rowSums(for.plot[,1:2])),] #Removing inf index
for.plot
dim(for.plot)
for.plot
colnames(for.plot)
colnames(for.plot)<-c("log2_Chip.Enrichment","log2_rden.change","Type")
ggplot(data=for.plot, mapping=aes(x=log2_Chip.Enrichment,y=log2_rden.change)) +
geom_point(aes(color=as.factor(Type)))
ggplot(data=for.plot, mapping=aes(x=log2_Chip.Enrichment,y=log2_rden.change)) +
geom_point(aes(color=Type))
cor(for.plot$log2_Chip.Enrichment,for.plot$log2_rden.change,method = "spearman")
cor(for.plot$log2_Chip.Enrichment,for.plot$log2_rden.change,method = "pearson")
#Result plot.
##Used Threshold: 5000
thresh <- 10000
df2<-filter(df, Length > thresh)
ref<-read.csv(url('https://hyeshik.qbio.io/binfo/mouselocalization-20210507.txt'), sep='\t')
colnames(ref)[1]<-"Geneid"
#Preprocessing
df2$Geneid<-substr(df2$Geneid,1,18)
dfs<-merge(df2,ref,by="Geneid")
ref<-read.csv(url('https://hyeshik.qbio.io/binfo/mouselocalization-20210507.txt'), sep='\t')
colnames(ref)[1]<-"Geneid"
#Preprocessing
df2$Geneid<-substr(df2$Geneid,1,18)
dfs<-merge(df2,ref,by="Geneid")
colnames(dfs)
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change),dfs$type)
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot[,1:2])),] #Removing inf index
dim(for.plot)
colnames(for.plot)<-c("log2_Chip.Enrichment","log2_rden.change","Type")
library(ggplot2)
ggplot(data=for.plot, mapping=aes(x=log2_Chip.Enrichment,y=log2_rden.change)) +
geom_point(aes(color=Type))
cor(for.plot$log2_Chip.Enrichment,for.plot$log2_rden.change,method = "pearson")
cor(for.plot$log2_Chip.Enrichment,for.plot$log2_rden.change,method = "spearman")
#Result plot.
##Used Threshold: 5000
thresh <- 5000
df2<-filter(df, Length > thresh)
ref<-read.csv(url('https://hyeshik.qbio.io/binfo/mouselocalization-20210507.txt'), sep='\t')
colnames(ref)[1]<-"Geneid"
#Preprocessing
df2$Geneid<-substr(df2$Geneid,1,18)
dfs<-merge(df2,ref,by="Geneid")
colnames(dfs)
CLIP<-as.numeric(dfs$`CLIP-35L33G.bam`)
RNA.control<-as.numeric(dfs$`RNA-control.bam`)
chip.enrichment<-CLIP/RNA.control
RPF<-as.numeric(dfs$`RPF-siLin28a.bam`)
RNA<-as.numeric(dfs$`RNA-siLin28a.bam`)
rden.change<-RPF/RNA
#Data preprocessing
for.plot <- data.frame(log2(chip.enrichment),log2(rden.change),dfs$type)
for.plot<-na.omit(for.plot) #Removing Nan index
for.plot<-for.plot[is.finite(rowSums(for.plot[,1:2])),] #Removing inf index
dim(for.plot)
colnames(for.plot)<-c("log2_Chip.Enrichment","log2_rden.change","Type")
library(ggplot2)
ggplot(data=for.plot, mapping=aes(x=log2_Chip.Enrichment,y=log2_rden.change)) +
geom_point(aes(color=Type))
cor(for.plot$log2_Chip.Enrichment,for.plot$log2_rden.change,method = "spearman")
cor(for.plot$log2_Chip.Enrichment,for.plot$log2_rden.change,method = "spearman") #
cor(for.plot$log2_Chip.Enrichment,for.plot$log2_rden.change,method = "pearson") # 0.28
